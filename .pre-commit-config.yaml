# Global configuration
fail_fast: false  # Continue running hooks even if one fails

repos:
  # Poetry check to ensure pyproject.toml is correctly configured
- repo: https://github.com/python-poetry/poetry
  rev: 1.8.0
  hooks:
  - id: poetry-check
    language_version: python3.10

# Sort imports
- repo: https://github.com/pre-commit/mirrors-isort
  rev: v5.10.1  # You can specify the version of isort you want to use
  hooks:
  - id: isort
    args: [--profile, black]        # Optional: Use the Black profile if you also use Black

# Ruff for linting and formatting Python code
- repo: https://github.com/astral-sh/ruff-pre-commit
  rev: v0.4.10
  hooks:
  - id: ruff            # Linter to catch stylistic and logical errors
    language_version: python3.10
    exclude: ^src/construct_tracker/data/lexicons/.*$
  - id: ruff-format     # Formatter to automatically format code
    exclude: ^src/construct_tracker/data/lexicons/.*$

# # Mypy for static type checking
# - repo: https://github.com/pre-commit/mirrors-mypy
#   rev: v1.10.0
#   hooks:
#   - id: mypy
#     args: [--ignore-missing-imports]    # Ignore missing imports for external packages
#     additional_dependencies:
#     - pydantic>=1.10.4
#     - types-requests      # Ensure type checking works with requests library

  # Formatting YAML and TOML files
# Formatting YAML and TOML files
- repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
  rev: v2.14.0
  hooks:
  - id: pretty-format-yaml
    language_version: python3.10  # Ensure Python 3.10 is used
    args:
    - --autofix
    - --indent=2
  - id: pretty-format-toml
    language_version: python3.10  # Ensure Python 3.10 is used
    exclude: ^poetry.lock$
    args:
    - --autofix
    - --indent=2
    - --no-sort

# General pre-commit hooks for file checks
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.6.0
  hooks:
  - id: check-added-large-files
    args: [--maxkb=15000]
    language_version: python3.10  # Ensure Python 3.10 is used
  - id: check-case-conflict
    language_version: python3.10  # Ensure Python 3.10 is used
  - id: end-of-file-fixer
    exclude: \.(csv|txt|json|docx)$
    language_version: python3.10  # Ensure Python 3.10 is used
  - id: trailing-whitespace
    exclude: \.(csv|txt|json|docx)$
    language_version: python3.10  # Ensure Python 3.10 is used
  - id: pretty-format-json
    language_version: python3.10  # Ensure Python 3.10 is used
    args:
    - --autofix
    - --indent=4
    - --no-sort-keys
  - id: check-merge-conflict
    language_version: python3.10  # Ensure Python 3.10 is used
  - id: check-yaml
    language_version: python3.10  # Ensure Python 3.10 is used
  - id: check-json
    language_version: python3.10  # Ensure Python 3.10 is used
  - id: check-toml
    language_version: python3.10  # Ensure Python 3.10 is used
  - id: detect-private-key
    language_version: python3.10  # Ensure Python 3.10 is used
  - id: name-tests-test
    language_version: python3.10  # Ensure Python 3.10 is used

  # Codespell for spell checking
- repo: https://github.com/codespell-project/codespell
  rev: v2.3.0
  hooks:
  - id: codespell
    language_version: python3.10
    args: ['--skip=*.csv,*.json,*.ipynb,*.txt,*.docx,*doc', --ignore-words-list=fpr]        # Skip spell check for Jupyter Notebooks
    exclude: (^.*stop_words.py$|^.*vaderSentiment.py$)        # Exclude specific files
    additional_dependencies:
    - tomli        # Dependency for processing TOML files

  # Clean and organize .env files
- repo: https://github.com/hija/clean-dotenv
  rev: v0.0.7
  hooks:
  - id: clean-dotenv      # Ensure .env files are clean and organized
    language_version: python3.10

  # Local hook to enforce .yaml extension over .yml
- repo: local
  hooks:
  - id: yaml-file-extension
    name: Prefer .yaml over .yml.
    entry: YAML files must have .yaml extension.
    language: fail
    files: \.yml$

# Local hook to run pytest with testmon
- repo: local
  hooks:
  - id: pytest
    language: system            # Specify the environment (system uses the Python environment managed by Poetry)
    # language_version: python3.10 # Ensure it runs in Python 3.10
    name: pytest
    entry: poetry run pytest     # Use `poetry run pytest` to run tests
    types: [python]
    pass_filenames: false        # Do not pass filenames to pytest
    always_run: true             # Always run this hook
